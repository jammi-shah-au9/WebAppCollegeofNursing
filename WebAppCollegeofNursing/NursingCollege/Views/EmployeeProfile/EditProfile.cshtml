@model ModelLayer.UserAccount

@{
    ViewBag.Title = "EditProfile";
}

<h2>Edit Profile</h2>
<div class="col-md-12">
    @using (Html.BeginForm("EditProfile", "EmployeeProfile", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Employee.Id)
        @Html.HiddenFor(model => model.Salt)
        @Html.HiddenFor(model => model.IsActive)
        @Html.HiddenFor(model => model.UserRole)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.ImagePath)
        @Html.HiddenFor(model => model.DepartmentId)

        <div style="display:flex; justify-content:space-around; flex-wrap:wrap;">
            <div class="card text-center col-md-6">

                <div class="card-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserCode, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.UserCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Parentage, htmlAttributes: new { @class = "control-label " })


                        @Html.EditorFor(model => model.Parentage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Parentage, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> {
               new SelectListItem{Value="Male",Text="Male" },
               new SelectListItem{Value="Female",Text="Female" }
           }, "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "control-label " })
                        <input type="file" name="FileUpload" class="form-control" accept="image/*" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Designation, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Employee.Designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Employee.Designation, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="card text-center col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Employee.DOJ, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Employee.DOJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.DOJ, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Qualification, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Employee.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Employee.Qualification, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Specialization, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Employee.Specialization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Employee.Specialization, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Experience, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Employee.Experience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Employee.Experience, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div>
                            <input type="submit" value="Save" class="btn btn-primary btn-block" />

                        </div>
                    </div>
                </div>
            </div>
        </div>

}
    </div>

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script>
        $('#DOB').datepicker({ dateFormat: "yy-mm-dd", changeYear: true, changeMonth: true, maxDate: 0 });
        $('#Employee_DOJ').datepicker({ dateFormat: "dd-mm-yy", changeYear: true, changeMonth: true, maxDate: 0 });
    </script>
