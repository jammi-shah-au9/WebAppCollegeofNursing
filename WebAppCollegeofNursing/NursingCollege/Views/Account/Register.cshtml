@model ModelLayer.UserAccount

@{
    ViewBag.Title = "Register";
}

<div class="container">
    <div class="typography">
        <h1>Register</h1>
    </div>
    <br />
    <div class="col-md-12">

        @using (Html.BeginForm())
        {
            <div style="display:flex; justify-content:space-around; flex-wrap:wrap;">
                <div class="card text-center col-md-4">

                    <div class="card-body">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Parentage, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Parentage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Parentage, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> {
                               new SelectListItem{ Text="Male",Value="Male"},
                               new SelectListItem{ Text="Female",Value="Female"},
                           }, "Select Gender", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Student.RollNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Student.RollNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student.RollNo, "", new { @class = "text-danger" })
                        </div>


                    </div>
                </div>
                <div class="card text-center col-md-4">

                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Student.Batch, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Student.Batch, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Student.Batch, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="card text-center col-md-4">

                    <div class="card-body">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Department", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("DepartmentId", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Registration Number", htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.UserCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <input type="submit" value="Register" class="btn btn-primary btn-block" />
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>
    </div>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script>
        $('#DOB').datepicker({ dateFormat: "yy-mm-dd", changeYear: true, changeMonth: true, maxDate: 0 });
    </script>
