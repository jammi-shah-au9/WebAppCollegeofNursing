@model ModelLayer.StudyMaterial

@{
    ViewBag.Title = "AddStudyMaterial";

}
@if (ViewBag.Message != null)
{
    if (ViewBag.Message == "Format")
    {
        <div class="alert alert-danger">
            Unsupported Format
        </div>
    }
    else if (ViewBag.Message == "Size")
    {
        <div class="alert alert-danger">
            Maximum file size exceeded
        </div>
    }
    else
    {
        <div class="alert alert-success">
            File Uploaded Successfully
        </div>
    }
}
<div class="col-md-12">
<h2 class="text-center">Add StudyMaterial</h2>
@using (Html.BeginForm("AddStudyMaterial", "StudyMaterials", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="card text-center">

        <div class="card-body">
            <div class="card-header">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label " })
                        @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
                    </div>
               
                <div class="form-group">
                    @Html.Label("Subject", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("SubjectId", null, "Select Subject", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>

                <div>
                    @Html.Label("Upload File", htmlAttributes: new { @class = "control-label " })
                    <input type="file" name="Files" multiple class="form-control" />
                    @Html.ValidationMessage("Files", "", new { @class = "text-danger" })
                </div>
               

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                        @Html.TextAreaFor(model => model.Description, 10, 20, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                <div class="form-group">
                        <input type="submit" value="Add Study Material" id="btnSubmit" class="btn btn-primary btn-block" />
                    
                </div>
                </div>
            </div>
            </div>
            }
</div>
